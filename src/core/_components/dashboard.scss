$dashboard-offset-default-width: 200px;

.bp-dashboard {
  display: flex;
  flex-direction: column;
  background-color: $brand-passive-elements;
  transition: 0.4s transform ease-out;
  min-height: 100vh;
  
  @at-root body {
    overflow: hidden;
    background-color: $brand-gray-dark;
  }

  & .app-header,
  & .app-footer {
    flex: none;
    width: 100%;
    position: initial;
  }

  & .app-content {
    // Adding a separation between the header (if any, will be removed later if none)
    &::before {
      content: '';
      display: block;
      height: $size-m;
      width: 100%;
    }

    flex: 1 1 auto;
    position: relative;
    overflow-y: auto;
    width: 100%;

    & .row {
      margin: 0 auto;
    }
  }

  // Covering the scenario where the dashboard does not include a header (navigation bar),
  // we don't need an extra padding if so. 
  & >:first-child::before {
    display: none;
  }

  &.open {
    width: 100vw;
    box-shadow: -8px 0 4px -4px $dashboard-shadow;
    transform: translateX(200px);

    & .navbar-items-label {
      display: inherit;
      align-items: center;
      padding-left: $size-xs;
    }

    & .navbar .navbar-actions { display: none; }
    & .app-content { pointer-events: none; }

    & .navbar-fixed-top .navbar-container .navbar-items {
      display: flex;
      justify-content: flex-start;
      width: $dashboard-offset-default-width;
      transform: translateX(-$dashboard-offset-default-width);
      margin-top: $size-xl;

      & li {
        width: 200px;
        max-width: initial;

        & a {
          display: flex;
          transition: all 0.4s;
          color: $brand-gray-light;
          padding: $size-s $size-xs;
          padding-left: $size-xl;
          text-align: left;
          opacity: 0;
          animation: drawmenu 1s ease-out;
          animation-fill-mode: forwards;
        }

        &.active a,
        & > a:hover,
        & > a:focus {
          &::before {
            height: 100%;
            width: $size-xs;
            animation: increasing-width 0.5s;
            animation-fill-mode: forwards;
          }

          color: $brand-primary;
          background-color: $dashboard-light;
        }
      }
    }
  }

  .app-footer {
    display: inherit;
    width: 100%;

    color: $brand-gray;
    background-color: $brand-gray-lighter;
    border-top: 1px solid $brand-gray-light;

    .footer-content {
      display: block;
      width: 100%;
      max-width: $container-large-desktop;
      margin: 0 auto;
      padding: $size-xs $size-xl;
    }
  }




  &.non-restrictive {
    @at-root body {
      overflow-y: auto;
    }

    .app-content {
      flex: 1 0 auto;
      margin-top: 110px;
    }

    .navbar-fixed-top { 
      position: fixed;
    }

  }



}

// Animated hamburguer menu in charge of collapsing/expanding the menu for our dashboard
// This element is reusable, so can be used anywhere outside the dashboard
.dashboard-hamburger {
  background-color: transparent;
  font-size: inherit;
  user-select: none;
  border: none;
  padding: 0;
  width: $size-m;
  height: $size-m;

  .hamburger {
    position: relative;
    display: block;
    width: $size-l;
    height: $size-xxs;
    background-color: $brand-gray-darker;
    border-radius: $size-l;
    transition: background 0.3s 0.5s ease;

    // Animation's purposes values, there is no value in our sizes.scss
    // Should be pixel "perfect" for this kind of stuff
    &::before { top: -6px; }
    &::after  { top: 6px; }

    &::before,
    &::after {
      content: '';
      display: block;
      position: absolute;
      width: inherit;
      height: inherit;
      background: $brand-gray-darker;
      border-radius: $size-l;
      transition: 0.3s;
    }

    &.dismiss::before,
    &.dismiss::after {
      transition: top 0.3s 0.6s ease, transform 0.6s ease;      
    }

    &.left-arrow::before,
    &.left-arrow::after,
    &.right-arrow::before,
    &.right-arrow::after {
      transition: top 0.5s ease;
    }
  }

  &.open {
    .hamburger.dismiss {
      transition: background 0.3s 0.1s ease;
      background: transparent;
    }

    // Animation showing an arrow pointing to the left and to the right
    & .left-arrow::before,
    & .right-arrow::before {
      transform: rotate3d(0, 0, 1, 40deg);
    }

    & .left-arrow::after,
    & .right-arrow::after {
      transform: rotate3d(0, 0, 1, -40deg);
    }

    & .left-arrow::before,
    & .left-arrow::after {
      transform-origin: 0px center;
      transition: top 0.3s ease, width 0.5s 0.3s, transform 0.3s 0.6s ease;
      width: $size-base;
      top: 0px;
    }

    & .right-arrow::before,
    & .right-arrow::after {
      transform-origin: right center;
      transition: top 0.3s ease, width 0.5s 0.3s, transform 0.5s 0.6s ease;
      width: $size-base;
      top: 0px;
      right: 0px;
    }

    // Simple animation for showing a "minus (-)" sign
    & .minus::before,
    & .minus::after {
      transform: none;
      top: 0px;
    }

    & .dismiss::before {
      transform: rotate3d(0, 0, 1, 45deg);
    }

    & .dismiss::after {
      transform: rotate3d(0, 0, 1, -45deg);
    }

    & .dismiss::before,
    & .dismiss::after {
      transition: top 0.3s ease, transform 0.3s 0.6s ease;
      transform-origin: 50% 50%;
      top: 0px;
    }
	}
}

@keyframes drawmenu {
    0% { opacity: 0; }
  100% { opacity: 1; }
}