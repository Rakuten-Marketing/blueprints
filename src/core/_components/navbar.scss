.navbar {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: initial;
  border: none;
  margin: 0;

  background-color: transparent;
  @extend %drop-shadow;

  // Unless the "navbar" element contains the "navbar-transparent" classname
  // this element will have a solid color as its background-color.
  // Detaching this property to allow users to have "inline" navbars
  &:not(.navbar-transparent) {
    background-color: $brand-white;
  }

  .navbar-side {
    @include centered-content;
    padding: $size-xs;

    flex-basis: 20%;
    flex-wrap: nowrap;
    justify-content: flex-end;

    // Forcing the image tags to use the 100% height as its maximum allowed.
    // We can include image tags everywhere inside this element
    & img {
      max-height: 100%;
      width: auto;
      @extend %image-rendering;
    }

    &.navbar-collapsible { display: none; }
    
    &.navbar-brand {
      float: none;
      font-size: inherit;
      line-height: normal;
    }

    &.navbar-brand,
    &.navbar-collapsible {
      height: inherit;
      justify-content: flex-start;
    }

    & a  {
      color: inherit;
      cursor: pointer;
      padding: $size-xs;
    }
  }

  &-items {
    display: flex;
    flex-basis: 100%;
    justify-content: center;

    &-label {
      display: block;
      min-height: 50%;
    }

    & .navbar-nav {
      display: flex;
      float: none;

      & li {
        float: none;
        display: flex;
        overflow: hidden;
        min-width: $navbar-base;
        max-width: $navbar-base + $size-m;

        & > a {
          flex-basis: 100%;
          color: $brand-gray-darker;
          text-align: center;
          line-height: normal;
          padding: $size-xl $size-xs;

          &::before {
            content: '';
            background-color: $brand-primary-darker;  
            position: absolute;
            left: 0;
            right: 0;
            bottom: 0;
            height: 0;
          }
        }

        &.active a,
        & > a:hover,
        & > a:focus {
          &::before {
            height: $size-xxs;
            animation: increasing-height 0.5s;
            animation-fill-mode: forwards;
          }

          color: $brand-primary;
          background-color: $brand-gray-lighter;
        }
      }
    }
  }

  &-actions {
    // Hack for the "bp-dropdown", we should address a fix for this later
    // TODO: Normalize HTML markup for "bp-dropdown" components
    & .nav .open > a, .nav .open > a:hover, .nav .open > a:focus {
      background-color: transparent;
    }

    & .navbar-nav > li {
      float: none;
      display: inline-flex;

      &.active a,
      & > a:hover,
      & > a:focus {
        color: $brand-primary;
        background-color: inherit;
      }
    }
  }
}

// Since we are using the "flex" box model, we need to be this specific
// to override the default Bootstrap's behavior (grid system). We don't need
// those negatives margin values to "align" the content here
.navbar-nav,
.navbar > .container .navbar-brand,
.navbar > .container-fluid .navbar-brand {
  margin: 0;
}

.navbar-icon {
  font-size: $size-l;
  display: block;

  &::before {
    display: block;
    margin-bottom: $size-xxs;
  }
}

.navbar-brand > span {
  display: flex;
  align-items: center;
  pointer-events: none;
  user-select: none;
  
  &::before {
    content: '';
    display: block;
    height: $size-xl;
    margin: 0px $size-xxs;
    border-left: 1px solid $brand-gray-light;
  }
}

// Variation of our navbar where the element has sticky properties to the top
// This is also know as the main navigation bar in web applications
.navbar-fixed-top {
  height:$navbar-base;
  flex: 0 0 auto;
  flex-flow: row nowrap;
  justify-content: space-around;
  position: fixed;

  &.navbar-regular {
    position: fixed;
    & + * {
      padding-top: $navbar-base;
    }
  }
  
  .navbar-container {
    display: inherit;
    height: 100%;
    width: 100%;
    max-width: $container-large-desktop;
    padding: 0px $size-m;
    margin: 0 auto;
  }

  @media (max-width: $container-sm) {
    .navbar-container {
      & .navbar-brand {
        height: inherit;
        justify-content: center;
        flex-basis: 100%;
      }

      & .navbar-collapsible,
      & .navbar-actions { 
        display: flex;
        position: absolute;
        align-self: center;
      }

      & .navbar-actions { right: $size-s; }
      & .navbar-items {
        display: none;
        position: absolute;
        height: 100vh;
        width: $navbar-base;
        z-index: 3;
        left: 0;

        & .navbar-nav {
          display: flex;
          align-content: stretch;
          flex-flow: column wrap;
          width: inherit;
        }
      }
    }
  }
}